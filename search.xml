<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>API技术文档工具-ShowDoc</title>
    <url>/2019/12/12/API%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7-ShowDoc/</url>
    <content><![CDATA[<p>VMware -&gt; ubuntu -&gt; docker -&gt; showdoc</p>
]]></content>
      <categories>
        <category>基础学习篇</category>
      </categories>
  </entry>
  <entry>
    <title>原型图设计工具-Mockplus</title>
    <url>/2019/12/11/%E5%8E%9F%E5%9E%8B%E5%9B%BE%E8%AE%BE%E8%AE%A1%E5%B7%A5%E5%85%B7-Mockplus/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Mockplus（摹客）是一款简洁快速的原型图设计工具。适合软件团队、个人在软件开发的设计阶段使用。其低保真、无需学习、快速上手、功能够用。并能够很好地表达自己的设计。</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
  </entry>
  <entry>
    <title>Docker入门篇</title>
    <url>/2019/12/08/Docker%E5%85%A5%E9%97%A8%E7%AF%87/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p>
]]></content>
      <categories>
        <category>基础学习篇</category>
      </categories>
  </entry>
  <entry>
    <title>gitlab服务器搭建</title>
    <url>/2019/12/04/gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1>]]></content>
      <categories>
        <category>基础学习篇</category>
      </categories>
  </entry>
  <entry>
    <title>微信公众号开发</title>
    <url>/2019/12/04/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="微信公众号介绍"><a href="#微信公众号介绍" class="headerlink" title="微信公众号介绍"></a>微信公众号介绍</h1><ol>
<li><p>公众号与微信的区别</p>
</li>
<li><p>公众号类型介绍</p>
</li>
<li><p>公众号申请</p>
</li>
<li><p>微信公众平台</p>
</li>
</ol>
<h1 id="编辑模式介绍"><a href="#编辑模式介绍" class="headerlink" title="编辑模式介绍"></a>编辑模式介绍</h1><ol>
<li>自动回复</li>
<li>素材管理</li>
</ol>
<h1 id="开发者模式介绍"><a href="#开发者模式介绍" class="headerlink" title="开发者模式介绍"></a>开发者模式介绍</h1><h1 id="开发环境搭建"><a href="#开发环境搭建" class="headerlink" title="开发环境搭建"></a>开发环境搭建</h1>]]></content>
      <categories>
        <category>基础学习篇</category>
      </categories>
  </entry>
  <entry>
    <title>单元测试工具-Junit</title>
    <url>/2019/11/26/Java%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7-Junit/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ul>
<li>JUnit是编写可重复测试的简单框架。它是用于单元测试框架的xUnit体系结构的一个实例。</li>
<li>拓展 xUnit<ul>
<li>PythonUnit</li>
<li>CppUnit</li>
<li>Junit</li>
</ul>
</li>
<li><a href="https://github.com/junit-team/junit4/wiki/Download-and-Install" target="_blank" rel="noopener">下载</a> </li>
</ul>
]]></content>
      <categories>
        <category>基础学习篇</category>
      </categories>
  </entry>
  <entry>
    <title>DOS常用命令</title>
    <url>/2019/11/25/DOS%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="DOS常用命令："><a href="#DOS常用命令：" class="headerlink" title="DOS常用命令："></a>DOS常用命令：</h1><ul>
<li><p>ipconfig</p>
<p>  ipconfig /?用法:</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig [/allcompartments] [/? | /all |</span><br><span class="line">                            /renew [adapter] | /release [adapter] |</span><br><span class="line">                            /renew6 [adapter] | /release6 [adapter] |</span><br><span class="line">                            /flushdns | /displaydns | /registerdns |</span><br><span class="line">                            /showclassid adapter |</span><br><span class="line">                            /setclassid adapter [classid] |</span><br><span class="line">                            /showclassid6 adapter |</span><br><span class="line">                            /setclassid6 adapter [classid] ]</span><br><span class="line">```   </span><br><span class="line">其中</span><br></pre></td></tr></table></figure>
<p>  adapter             连接名称</p>
<pre><code>(允许使用通配符 * 和 ?，参见示例)</code></pre><p>  选项:<br>  /?               显示此帮助消息<br>  /all             显示完整配置信息。<br>  /release         释放指定适配器的 IPv4 地址。<br>  /release6        释放指定适配器的 IPv6 地址。<br>  /renew           更新指定适配器的 IPv4 地址。<br>  /renew6          更新指定适配器的 IPv6 地址。<br>  /flushdns        清除 DNS 解析程序缓存。<br>  /registerdns     刷新所有 DHCP 租约并重新注册 DNS 名称<br>  /displaydns      显示 DNS 解析程序缓存的内容。<br>  /showclassid     显示适配器的所有允许的 DHCP 类 ID。<br>  /setclassid      修改 DHCP 类 ID。<br>  /showclassid6    显示适配器允许的所有 IPv6 DHCP 类 ID。<br>  /setclassid6     修改 IPv6 DHCP 类 ID。</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">默认情况下，仅显示绑定到 TCP/IP 的适配器的 IP 地址、子网掩码和</span><br><span class="line">默认网关。</span><br><span class="line"></span><br><span class="line">对于 Release 和 Renew，如果未指定适配器名称，则会释放或更新所有绑定</span><br><span class="line">到 TCP/IP 的适配器的 IP 地址租约。</span><br><span class="line"></span><br><span class="line">对于 Setclassid 和 Setclassid6，如果未指定 ClassId，则会删除 ClassId。</span><br><span class="line"></span><br><span class="line">示例:</span><br></pre></td></tr></table></figure>
<pre><code>&gt; ipconfig                       ... 显示信息
&gt; ipconfig /all                  ... 显示详细信息
&gt; ipconfig /renew                ... 更新所有适配器
&gt; ipconfig /renew EL*            ... 更新所有名称以 EL 开头的连接
&gt; ipconfig /release *Con*        ... 释放所有匹配的连接，
                                    例如 &quot;Local Area Connection 1&quot; 或
                                        &quot;Local Area Connection 2&quot;
&gt; ipconfig /allcompartments      ... 显示有关所有分段的信息
&gt; ipconfig /allcompartments /all ... 显示有关所有分段的详细信息</code></pre><pre><code></code></pre></li>
<li><p>ping </p>
<ul>
<li>使用格式：ping+空格键+地址+命令参数<ol>
<li>经典用法一：检查网速状态的好坏（这里指的是网络延时的高低，不是下载速度。）</li>
</ol>
<ul>
<li>格式：输入ping <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> -t,输入完成之后敲击键盘的回车键来执行输入的命令。</li>
<li>命令解释：-t参数代表的是循环执行这条命令，如果不加-t的话就执行4条命令行之后就自动终止。我们重点看时间=多少毫秒。这个值越高说明你的网络越不稳定，网络延时就高。当你打开网页的时候就比较慢。所以延时越低越好，最好是10毫秒以下。还有一种情况是数据丢包，隔一行出一次数据。比如说我们打游戏的时候，就是对那种延时特别敏感的游戏。丢2个数据包就可以感觉出来，症状就是你本来点击鼠标操作了但在游戏里面没有反馈出你的操作，这就是明显的数据丢包。</li>
</ul>
<ol start="2">
<li>经典用法二：检查IP地址的连通性和判断外网状态。</li>
</ol>
<ul>
<li>格式：输入ping IP地址 -t，输入完成之后敲击键盘上的回车键。</li>
<li>首先我们控制面板找到网络连接然后查看本地连接—&gt;- 进入本地连接—&gt; 详细信息—&gt; 查看本机ip以及路由网关</li>
<li>192.168.1.1这个地址是你路由器网关的ip地址。如果我们的电脑无法上网了，就用命令去ping网关的地址查看连通的状态。</li>
<li>命令行说明：小于1毫秒说明是局域网状态。来自192.168.1.1的回复：字节、时间等信息说明本地网卡的网线连接到路由器这段是连通的状态，如果不是上面的信息请检测网线是否存在问题。如果本机到路由器连通了还是不能连接外网，说明路由器本身故障或者网络供应商故障。</li>
</ul>
</li>
</ul>
</li>
<li><p>dir </p>
<ul>
<li>显示指定路径上所有文件或目录的信息</li>
<li>格式为”dir [盘符：][路径][文件名] [参数]”，比如”DIR D:\source”</li>
</ul>
</li>
<li><p>md(mkdir)</p>
<ul>
<li>建立目录</li>
<li>格式为”md [盘符][路径]”，例如”MD test”</li>
</ul>
</li>
<li><p>rd(rmdir)</p>
<ul>
<li>删除目录/文件夹</li>
<li>格式为”RD [盘符][路径]”。</li>
<li>注意：该命令只能删除空目录，并且不能删除当前目录。</li>
</ul>
</li>
<li><p>del</p>
<ul>
<li>删除文件</li>
<li>格式为”DEL [盘符][路径]”</li>
</ul>
</li>
<li><p>cd</p>
<ul>
<li>进入指定目录</li>
<li>格式为” CD [路径]”，例如”CD HAPPY”。</li>
<li>注意：只能进入当前盘符中的目录。其中”CD\”为回到根目录，”CD..”为回到上一层目录。</li>
</ul>
</li>
<li><p>copy</p>
<ul>
<li>拷贝文件</li>
<li>格式为”COPY [源目录或文件] [目的目录或文件]”，比如”COPY C:*.COM D:\”</li>
<li>注意：使用该命令进行文件拷贝时，目的目录一定要存在。</li>
</ul>
</li>
<li><p>del</p>
<ul>
<li>删除文件</li>
<li>格式为”DEL [盘符][路径][文件名] [参数]”，比如”DEL C:\DATA*.BAK”。它有一个参数：”/P”，可以使用户在删除多个文件时对每个文件都显示删除询问</li>
</ul>
</li>
<li><p>move</p>
<ul>
<li>移动文件，改目录名</li>
<li>格式为”MOVE [盘符][路径]”。</li>
</ul>
</li>
<li><p>ren(rename)</p>
<ul>
<li>改名</li>
<li>格式为”REN [原名] [现名]”，7.0以后版本的DOS都支持对文件名和目录名的修改，而以前的DOS只能修改文件名。</li>
</ul>
</li>
<li><p>cls</p>
<ul>
<li>清除显示器屏幕上的内容，使DOS提示符到屏幕左上角。</li>
<li>[格式] cls</li>
</ul>
</li>
<li><p>time  </p>
<ul>
<li>显示和设置DOS的系统时间</li>
<li>[格式] time [hh[:mm[:ss[.cc]]]</li>
</ul>
</li>
<li><p>date</p>
<ul>
<li>显示和设置DOS的系统日期</li>
<li>[格式] date [MM-DD-YY]</li>
</ul>
</li>
<li><p>ver</p>
<ul>
<li>显示正在运行的DOS系统版本号</li>
<li>[格式] ver</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>基础学习篇</category>
      </categories>
  </entry>
  <entry>
    <title>每天一梗</title>
    <url>/2019/11/24/%E6%AF%8F%E5%A4%A9%E4%B8%80%E6%A2%97/</url>
    <content><![CDATA[<ul>
<li>做轮子 ： “造轮子”的含义：明知道你做的不可能比前辈做得更好，却仍然坚持要做。<br>比如，车轮子是圆形的，这是大家公认的最合适的形状。而自己非要发明另一种形状的轮子，这种行为就叫重复发明轮子，即“造轮子”。<br>IT界指把别人已经做好的类库，自己再重新做一遍</li>
</ul>
]]></content>
      <categories>
        <category>手记</category>
      </categories>
  </entry>
  <entry>
    <title>Redis入门篇</title>
    <url>/2019/11/23/Redis%E5%85%A5%E9%97%A8%E7%AF%87/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><ul>
<li>NoSQL概述<ul>
<li>NoSQL = Not Only SQL</li>
<li>菲关系型数据库</li>
</ul>
</li>
<li>为什么要用NoSQL<ul>
<li>High performance - 高并发读写</li>
<li>Huge Storage - 海量数据的高效率存储和访问</li>
<li>High Scalability &amp;&amp; High Availability - 高可拓展性和高可用性</li>
</ul>
</li>
<li>NoSQL数据库的四大分类<ul>
<li>键值（Key - Value）存储</li>
<li>列存储</li>
<li>文档数据库</li>
<li>图形数据库</li>
</ul>
</li>
<li>四类NoSQL数据库比较</li>
</ul>
<table>
<thead>
<tr>
<th>分类</th>
<th>相关产品</th>
<th>典型应用</th>
<th>数据模型</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>键值（key-value）</td>
<td>Tokyo Cabinet/Tyrant、Redis、Voldemort、Berkeley DB</td>
<td>内存缓存，主要用于处理大量数据的高访问负载</td>
<td>一系列键值对</td>
<td>快速查询</td>
<td>存储的数据缺少结构化</td>
</tr>
<tr>
<td>列存储数据库</td>
<td>Cassandra、HBase、Riak</td>
<td>分布式的文件系统</td>
<td>以列簇式存储，将统一列数据存在一起</td>
<td>查找书读快、可拓展性强，更容易进行分布式拓展</td>
<td>功能相对局限</td>
</tr>
<tr>
<td>文档型数据库</td>
<td>CouchDB、MongoDB</td>
<td>Web应用（与Key-value类似，value是结构化的）</td>
<td>一系列键值对</td>
<td>数据结构要求不严格</td>
<td>查询性能不高，而且缺乏统一的查询语法</td>
</tr>
<tr>
<td>图形(Graph)数据库</td>
<td>Neo4J、InfoGrid、Infinite Graph</td>
<td>社交网络，推荐系统等。专注于构建关系图谱</td>
<td>图结构</td>
<td>利用图结构相关算法</td>
<td>需要对整个图做计算才能得到出结果，不容易做分布式的集群方案</td>
</tr>
</tbody></table>
<ul>
<li>NoSQL特点<ul>
<li>易拓展</li>
<li>灵活的数据模型</li>
<li>大量数据，高性能</li>
<li>高可用</li>
</ul>
</li>
</ul>
<h1 id="Redis-概述"><a href="#Redis-概述" class="headerlink" title="Redis 概述"></a>Redis 概述</h1><ul>
<li><p>高性能键值对数据库，支持的键值数据类型：</p>
<ul>
<li>字符串类型</li>
<li>列表类型</li>
<li>散列类型</li>
<li>集合类型</li>
<li>有序集合类型</li>
</ul>
</li>
<li><p>Redis的应用场景</p>
<ul>
<li>缓存</li>
<li>消息队列</li>
<li>应用排行榜</li>
<li>网站访问统计</li>
<li>数据过期处理</li>
<li>分布式集群架构中的session分离</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>基础学习篇</category>
      </categories>
  </entry>
  <entry>
    <title>IDEA使用记录</title>
    <url>/2019/11/23/IDEA%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="IDEA-Java相关开发配置"><a href="#IDEA-Java相关开发配置" class="headerlink" title="IDEA Java相关开发配置"></a>IDEA Java相关开发配置</h1><h2 id="编码设置"><a href="#编码设置" class="headerlink" title="编码设置"></a>编码设置</h2><ul>
<li>File -&gt; Settings -&gt; Editor -&gt; File Encodings</li>
<li>File -&gt; Other Settings -&gt; Default Settings -&gt; Editor -&gt; File Encodings</li>
<li>将项目中的.idea文件夹中的encodings.xml文件中的编码格式改为uft-8</li>
<li>File -&gt; Settings -&gt; Build,Execution,Deployment -&gt; Compiler -&gt; Java Compiler ：<br>设置 Additional command line parameters选项为 -encoding utf-8</li>
<li>如使用tomcat，可以采用以下方式设置编码：<ul>
<li>打开Run/Debug Configuration,选择你的tomcat/defaults</li>
<li>在 TomEE Server/Tomcat Server -&gt; Local -&gt; VM options 设置为 -Dfile.encoding=UTF-8 ，重启tomcat</li>
</ul>
</li>
</ul>
<h2 id="ASCII-码转换"><a href="#ASCII-码转换" class="headerlink" title="ASCII 码转换"></a>ASCII 码转换</h2><ul>
<li>File -&gt; Settings -&gt; File encoding :勾选 Transparent native-to-ascii conversion</li>
<li>File -&gt; Other Settings -&gt; Default Settings -&gt; File encoding :勾选 Transparent native-to-ascii conversion</li>
</ul>
<h2 id="配置JDK"><a href="#配置JDK" class="headerlink" title="配置JDK"></a>配置JDK</h2><ul>
<li><strong>启动页面中配置JDK</strong><ul>
<li>在IDEA启动页面中，下拉Configure，选择Project Defaults – Project Structure</li>
<li>在打开的窗口中，点击New按钮，并选择JDK</li>
<li>选择对应的JDK版本，点击OK按钮</li>
</ul>
</li>
<li><strong>新建项目前配置JDK</strong><ul>
<li>打开IDEA集成开发环境工具，点击：File–Project Structure (Ctrl + shift + Alt + s);</li>
<li>选择SDKs属性，并点击中间的加号+，选择JDK;</li>
<li>选择本地计算机中已经安装的JDK目录(选择bin目录的上一级即可)，然后点击ok按钮;</li>
<li>然后在Project Structure窗口，依次点击Apply–OK;</li>
</ul>
</li>
<li><strong>新建项目中配置JDK</strong><ul>
<li>打开IDEA集成开发环境工具，点击：File–New–Project;</li>
<li>在打开的窗口中，选择按钮New;</li>
<li>然后选择对应的JDK版本，点击OK按钮;</li>
<li>最后Next创建项目，并使用配置的JDK</li>
</ul>
</li>
<li><strong>切换项目的JDK</strong><ul>
<li>打开IDEA集成开发环境工具，点击：File–Project Structure (Ctrl + shift + Alt + s);</li>
<li>在打开的窗口中，选择Project，然后在详情页面中，选择按钮New，并点击JDK选项;</li>
<li>选择对应的JDK版本，点击OK按钮;</li>
</ul>
</li>
</ul>
<h2 id="配置MAVEN"><a href="#配置MAVEN" class="headerlink" title="配置MAVEN"></a>配置MAVEN</h2><ul>
<li>File -&gt; Settings -&gt; Build,Execution,Deployment -&gt; Build Tools -&gt; Maven<ul>
<li>设置 Maven home directory eg: D:/software/apache-maven-3.3.9</li>
<li>User setting file  eg: D:\software\apache-maven-3.3.9\repository\项目名\settings.xml</li>
<li>Local repository eg:D:\software\apache-maven-3.3.9\repository\项目名</li>
</ul>
</li>
<li>File -&gt; Other Settings -&gt; Default Settings -&gt; Build,Execution,Deployment -&gt; Build Tools -&gt; Maven<ul>
<li>设置 Maven home directory eg: D:/software/apache-maven-3.3.9</li>
<li>User setting file  eg: D:\software\apache-maven-3.3.9\repository\项目名\settings.xml</li>
<li>Local repository eg:D:\software\apache-maven-3.3.9\repository\项目名</li>
</ul>
</li>
</ul>
<h2 id="配置git-or-svn"><a href="#配置git-or-svn" class="headerlink" title="配置git or svn"></a>配置git or svn</h2><ul>
<li><strong>Git ：</strong><ul>
<li>File -&gt; Setting -&gt; Version Control -&gt; Git -&gt; Path to Git executable 选择git安装后的git.exe文件，然后点击Test，测试是否设置成功</li>
<li>File -&gt; Other Settings -&gt; Default Settings -&gt;  Version Control -&gt; Git -&gt; Path to Git executable 选择git安装后的git.exe文件，然后点击Test，测试是否设置成功</li>
</ul>
</li>
<li><strong>svn :</strong><ul>
<li>File -&gt; Settings -&gt; Version Control -&gt; Subversion，选择svn安装后的svn.ext文件</li>
<li>File -&gt; Other Settings -&gt; Default Settings -&gt;  Version Control -&gt; Subversion，选择svn安装后的svn.ext文件</li>
</ul>
</li>
</ul>
<h2 id="配置tomcat"><a href="#配置tomcat" class="headerlink" title="配置tomcat"></a>配置tomcat</h2><h1 id="idea快捷键："><a href="#idea快捷键：" class="headerlink" title="idea快捷键："></a>idea快捷键：</h1><h2 id="编辑快捷键"><a href="#编辑快捷键" class="headerlink" title="编辑快捷键"></a>编辑快捷键</h2><ul>
<li><strong>编辑快捷键    介绍</strong><ul>
<li>Tab    缩进 / 配合代码提示实现自动完成</li>
<li>Shift + Tab    取消缩进</li>
<li>Ctrl + Z    撤销</li>
<li>Ctrl + Shift + Z    取消撤销</li>
<li>Ctrl + Y    删除光标所在行 或 删除选中的行</li>
<li>Ctrl + X    剪切光标所在行 或 剪切选择内容</li>
<li>Ctrl + C    复制光标所在行 或 复制选择内容</li>
<li>Ctrl + V    在光标所在处粘贴已复制内容</li>
<li>Ctrl + Shift + V    弹出历史复制内容</li>
<li>Ctrl + D    复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面</li>
<li>Ctrl + W    递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围</li>
<li>Ctrl + Shift + W    递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围</li>
<li>Ctrl + /    注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号</li>
<li>Ctrl + Shift + /    代码块注释</li>
<li>Ctrl + +    展开代码</li>
<li>Ctrl + -    折叠代码</li>
<li>Ctrl + Shift + +    展开所有代码</li>
<li>Ctrl + Shift + -    折叠所有代码</li>
<li>Alt +    鼠标左键上下拖动 多行编辑</li>
<li>Alt + Shift +    鼠标左键多行选择 自定义多行编辑</li>
<li>Ctrl + Shift +    前方向键 光标放在方法名上，将方法移动到上一个方法前面，调整方法排序。光标放在普通代码行上，将改行上移</li>
<li>Ctrl + Shift +    后方向键 光标放在方法名上，将方法移动到下一个方法前面，调整方法排序。光标放在普通代码行上，将改行下移</li>
</ul>
</li>
</ul>
<h2 id="查找替换快捷键"><a href="#查找替换快捷键" class="headerlink" title="查找替换快捷键"></a>查找替换快捷键</h2><ul>
<li><strong>查找替换快捷键    介绍</strong><ul>
<li>Ctrl + F    在当前文件中进行文本查找</li>
<li>Ctrl + Shift + F    在整个项目或者指定目录内的文件中进行文本查找</li>
<li>Ctrl + N    根据输入的 类名 查找类文件</li>
<li>Ctrl + Shift + N    通过文件名定位，打开文件 / 目录，打开目录需要在输入的内容后面多加一个正斜杠</li>
<li>Ctrl + Shift + Alt + N    查找 变量 / 方法</li>
<li>双击Shift    弹出 Search Everywhere 弹出层</li>
<li>Alt + F3    高亮显示所有该选中文本，按 Enter 选中下一个，按 Esc 高亮消失，推荐使用Ctrl+F</li>
<li>Ctrl + Shift + F7    高亮显示所有该选中文本，按 Esc 高亮消失，推荐使用Ctrl+F 或 Alt + F3</li>
<li>Ctrl + E    显示最近打开的文件记录列表</li>
<li>Ctrl + Shift + E    显示最近修改的文件列表的弹出层</li>
<li>Ctrl + F12    弹出当前文件结构层（如查看当前类的所有方法），可以在弹出的层上直接输入，进行筛选</li>
<li>Ctrl + H    显示当前类的继承层次结构（包含其父类和子类）</li>
<li>Ctrl + R    在当前文件进行文本替换</li>
<li>Ctrl + Shift + R    根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件</li>
</ul>
</li>
<li><strong>光标定位快捷键    介绍</strong><ul>
<li>Ctrl + Home    跳到文件头</li>
<li>Ctrl + End    跳到文件尾</li>
<li>Ctrl + Shift + Backspace    退回到上次修改的地方</li>
<li>Ctrl + Alt + 左方向键    退回到上一个操作的地方</li>
<li>Ctrl + Alt + 右方向键    前进到上一个操作的地方</li>
<li>Alt + 前方向键    当前光标跳转到当前文件的前一个方法名位置</li>
<li>Alt + 后方向键    当前光标跳转到当前文件的后一个方法名位置</li>
</ul>
</li>
</ul>
<h2 id="窗口导航快捷键"><a href="#窗口导航快捷键" class="headerlink" title="窗口导航快捷键"></a>窗口导航快捷键</h2><ul>
<li><strong>窗口导航快捷键    介绍</strong><ul>
<li>Ctrl + Tab    编辑窗口切换，如果在切换的过程又加按上delete，则是关闭对应选中的窗口</li>
<li>Alt + 1,2,3…9    显示对应数值的选项卡，其中 1 是 Project 用得最多</li>
<li>ESC    从工具窗口进入代码文件窗口，或退出打开的窗口</li>
</ul>
</li>
</ul>
<h2 id="代码自动档快捷键"><a href="#代码自动档快捷键" class="headerlink" title="代码自动档快捷键"></a>代码自动档快捷键</h2><ul>
<li><strong>代码自动档快捷键    介绍</strong><ul>
<li>Ctrl + Space    基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 Ctrl + 逗号</li>
<li>Ctrl + Shift + Space    智能代码提示</li>
<li>Ctrl + J    显示与之匹配的实时代码模板</li>
<li>Shift + Enter    开始新一行。光标所在行下空出一行，光标定位到新行位置</li>
<li>Ctrl + Shift + Enter    自动结束代码，行末自动添加 分号/括号/引号 等，if/for等会自动添加所需结构</li>
<li>Ctrl + Alt + Enter    光标所在行上空出一行，光标定位到新行</li>
<li>Ctrl + Enter    智能分隔行</li>
<li>Ctrl + Shift + J    自动将下一行合并到当前行末尾</li>
<li>Ctrl + Shift + U    对选中的代码进行大 / 小写轮流转换</li>
<li>Ctrl + Alt + L    格式化代码，可以对当前文件和整个包目录使用</li>
<li>Ctrl + Alt + O    优化导入的类，可以对当前文件和整个包目录使用</li>
<li>Alt + Insert    在类中使用可以自动生成代码（如 getter/setter，构造函数，toString()</li>
<li>Ctrl + Alt + T    对选中的代码弹出环绕选项弹出层</li>
<li>Ctrl + Shift + T    对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择</li>
<li>Ctrl + O    选择可重写的方法</li>
<li>Ctrl + I    选择可继承的方法</li>
</ul>
</li>
</ul>
<h2 id="代码重构快捷键"><a href="#代码重构快捷键" class="headerlink" title="代码重构快捷键"></a>代码重构快捷键</h2><ul>
<li><strong>代码重构快捷键    介绍</strong><ul>
<li>Shift + F6    对 文件夹 / 文件 / 类 / 方法 / 变量 (重构)重命名</li>
<li>Ctrl + Shift + Alt + T    重构功能大汇总，叫做 Refactor This</li>
</ul>
</li>
</ul>
<h2 id="代码追踪快捷键"><a href="#代码追踪快捷键" class="headerlink" title="代码追踪快捷键"></a>代码追踪快捷键</h2><ul>
<li><strong>代码追踪快捷键    介绍</strong><ul>
<li>Ctrl + B    进入光标所在的方法/变量的接口或定义处，等效于 Ctrl + 左键单击</li>
<li>Alt + F7    查找光标所在的 方法 / 变量 / 类 被使用的地方</li>
<li>Ctrl + Alt + F7    查找光标所在的 方法 / 变量 / 类 被使用的地方，用弹出框的方式找出来</li>
</ul>
</li>
</ul>
<h2 id="编译调试运行快捷键"><a href="#编译调试运行快捷键" class="headerlink" title="编译调试运行快捷键"></a>编译调试运行快捷键</h2><ul>
<li><strong>编译调试运行快捷键    介绍</strong><ul>
<li>Ctrl + F9    执行 Make Project 操作，编译所有</li>
<li>Ctrl + Shift + F9    编译选中的 文件 / 包 / Module</li>
<li>Shift + F10    等效于点击工具栏的 Run 按钮</li>
<li>Alt + Shift + F10    弹出 Run 的可选择菜单</li>
<li>Shift + F9    等效于点击工具栏的 Debug 按钮</li>
<li>Alt + Shift + F9    弹出 Debug 的可选择菜单</li>
<li>F7    在 Debug 模式下，进入下一步，即 Step into。如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</li>
<li>F8    在 Debug 模式下，进入下一步，即 Step over。如果当前行断点是一个方法，则不进入当前方法体内</li>
<li>F9    在 Debug 模式下，恢复程序运行，即 Continue。但是如果该断点下面代码还有断点则停在下一个断点上</li>
<li>F2    跳转到下一个高亮错误 或 警告位置</li>
<li>Shift + F2    跳转到上一个高亮错误 或 警告位置</li>
<li>Alt + Enter    IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同</li>
</ul>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><strong>其他快捷键    介绍</strong><ul>
<li>Ctrl + Alt + S    打开 IntelliJ IDEA 系统设置</li>
<li>Ctrl + Shift + Alt + S    打开当前项目设置</li>
<li>Ctrl + Alt + Y    同步、刷新</li>
<li>Shift + 滚轮前后滚动    当前文件的横向滚动轴滚动</li>
<li>Ctrl + 左键单击    在打开的文件标题上，弹出该文件路径</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
  </entry>
  <entry>
    <title>项目管理利器-MAVEN</title>
    <url>/2019/11/19/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%88%A9%E5%99%A8MAVEN/</url>
    <content><![CDATA[<h1 id="项目管理利器-maven（windows7-jdk1-8）"><a href="#项目管理利器-maven（windows7-jdk1-8）" class="headerlink" title="项目管理利器 maven（windows7 jdk1.8）"></a>项目管理利器 maven（windows7 jdk1.8）</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li>Maven(Apache)是一个软件项目管理和理解工具。基于项目对象模型（POM）的概念，Maven可以从中央信息管理项目的构建，报告和文档。</li>
</ul>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><ul>
<li>bin ：主要包含了mvn运行脚本</li>
<li>boot ：类加载起的框架</li>
<li>conf：配置文件 settting.xml（非常重要的文件）</li>
<li>lib：maven类库</li>
<li>LICENSE：maven使用的软件许可证</li>
<li>NOTICE：maven包含的第三方软件</li>
<li>README.txt：Maven的简要介绍，包括安装需求及如何安装的简要指令等。</li>
</ul>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ul>
<li>编辑系统变量 MAVNE_HOME : D:\software\apache-maven-3.3.9</li>
<li>编辑系统变量 Path ：%MAVEN_HOME%\bin;</li>
<li>进入dos命令界面：输入 mvn -v,如果显示maven版本及jdk以及系统相关的信息—&gt;成功，否则—&gt;失败，检查环境变量是否配置正确。</li>
</ul>
<h2 id="maven项目目录结构"><a href="#maven项目目录结构" class="headerlink" title="maven项目目录结构"></a>maven项目目录结构</h2><ul>
<li>src<ul>
<li>main<ul>
<li>java</li>
<li>resources</li>
<li>filters</li>
</ul>
</li>
<li>test<ul>
<li>java</li>
<li>resources</li>
<li>filters</li>
</ul>
</li>
<li>it</li>
<li>assembly</li>
<li>site</li>
</ul>
</li>
</ul>
<ul>
<li>pom.xml </li>
<li>LICENSE.txt</li>
<li>NOTICE.txt</li>
<li>README.txt</li>
</ul>
<h2 id="Maven常用构建命令"><a href="#Maven常用构建命令" class="headerlink" title="Maven常用构建命令"></a>Maven常用构建命令</h2><ul>
<li>查看版本信息: mvn -v</li>
<li>编译项目：mvn compile</li>
<li>测试项目：mvn test</li>
<li>项目打包：mvn package</li>
<li>删除target：mvn clean</li>
<li>安装jar包到本地仓库中：mvn install </li>
<li>创建目录：<ul>
<li>选择性创建目录： mvn archetype:generate</li>
<li>一次性创建目录： mvn archetype：generate -DgroupId=组织名 -DartifactId=项目名 -Dversion=版本号 -Dpackage=包名</li>
</ul>
</li>
</ul>
<h2 id="Maven坐标和仓库"><a href="#Maven坐标和仓库" class="headerlink" title="Maven坐标和仓库"></a>Maven坐标和仓库</h2><ul>
<li>坐标：构件</li>
<li>仓库：<ul>
<li>本地仓库</li>
<li>本地私服</li>
<li>中央仓库(maven安装目录 -&gt; lib -&gt; maven-model-builder-3.3.9.jar - &gt;pom.xml可以找到中央仓库)</li>
<li>镜像仓库</li>
</ul>
</li>
<li>更改仓库位置<ul>
<li>本地仓库修改： 修改setting.xml，加入或修改原有localRepository，如：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;localRepository&gt;D:/software/apache-maven-3.3.9/repository&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure></li>
<li>镜像仓库修改： 修改setting.xml，加入或修改原有mirror，如：修改为阿里云镜像仓库  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">        &lt;mirror&gt;  </span><br><span class="line">        &lt;id&gt;alimaven&lt;/id&gt;  </span><br><span class="line">        &lt;name&gt;aliyun maven&lt;/name&gt;  </span><br><span class="line">        &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;  </span><br><span class="line">        &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">        &lt;mirror&gt;  </span><br><span class="line">        ```   </span><br><span class="line"></span><br><span class="line">## Maven生命周期</span><br><span class="line">+ 项目的构建过程 : 清理,编译,测试,打包,集成测试,验证,部署</span><br><span class="line">+ Maven生命周期</span><br><span class="line">    - clean     清理项目</span><br><span class="line">        * pre-clean 执行清理前的工作</span><br><span class="line">        * clean 清理上一次构建生成的文件</span><br><span class="line">        * post-clean 执行清理后的文件</span><br><span class="line">    - default   构建项目（核心）</span><br><span class="line">        * compile、test、package、install</span><br><span class="line">    - site      生成项目站点</span><br><span class="line">        * pre-site 在生成站点前要完成的工作</span><br><span class="line">        * site 生成项目的站点文档</span><br><span class="line">        * post-site 在生成项目站点后要完成的工作</span><br><span class="line">        * site-deploy 发布生成的站点到服务器上</span><br><span class="line"></span><br><span class="line">## Maven pom解析</span><br><span class="line">+ [详细](https://maven.apache.org/pom.html)</span><br><span class="line">+ 常用</span><br><span class="line">    + 基础知识</span><br></pre></td></tr></table></figure>
<!-- 公司或者组织的唯一标志，并且配置时生成的路径也是由此生成， 如com.xie.project-group，maven会将该项目打成的jar包放本地路径：/com/xie/project-group -->
<groupId> … &lt;/ groupId&gt;<!-- 项目的唯一ID，一个groupId下面可能多个项目，需要artifactId来区分的 -->
<artifactId> … &lt;/ artifactId&gt;<!-- 版本号 -->
&lt;!– 第一个0表示大版本号，第二个0表示分支版本号，第三个0表示小版本号<br>  SNAPSHOT 快照<br>  ALPHA 内部测试<br>  BETA 公测<br>  RELEASE 稳定<br>  GA 正式发布</artifactId></groupId></li>
<li>-&gt;<br><version> … &lt;/ version&gt;<!--默认jar，也可以是pom，jar，maven-plugin，ejb，war，ear，rar-->
<packaging> … &lt;/ packaging&gt;<!--依赖项-->
<dependencies> … &lt;/ dependencies&gt;<br><parent> … &lt;/ parent&gt;<br><dependencyManagement> … &lt;/ dependencyManagement&gt;<br><modules> … &lt;/ modules&gt;<br><properties> … &lt;/ properties&gt;<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ 构建设置</span><br></pre></td></tr></table></figure>
<build> … &lt;/ build&gt;<br><reporting> … &lt;/ reporting&gt;<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ 更多项目信息</span><br></pre></td></tr></table></figure>
<!--项目名-->
<name> … &lt;/ name&gt;<!--项目描述-->
<description> … &lt;/ description&gt;<!--项目地址-->
<url> … &lt;/ url&gt;<br><inceptionYear> … &lt;/ inceptionYear&gt;<!--许可证信息-->
<licenses> … &lt;/ licenses&gt;<!--组织信息-->
<organization> … &lt;/ organization&gt;<!--开发人员信息-->
<developers> … &lt;/ developers&gt;<br><contributors> … &lt;/ contributors&gt;<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">+ 环境设置</span><br></pre></td></tr></table></figure>
<issueManagement> … &lt;/ issueManagement&gt;<br><ciManagement> … &lt;/ ciManagement&gt;<br><mailingLists> … &lt;/ mailingLists&gt;<br><scm> … &lt;/ scm&gt;<br><prerequisites> … &lt;/ prerequisites<br><repositories> … &lt;/ repositories&gt;<br><pluginRepositories> … &lt;/ pluginRepositories&gt;<br><distributionManagement> … &lt;/ distributionManagement&gt;<br><profiles> … &lt;/ profiles&gt;<pre><code></code></pre></profiles></distributionManagement></pluginRepositories></repositories></prerequisites></scm></mailingLists></ciManagement></issueManagement></contributors></developers></organization></licenses></inceptionYear></url></description></name></reporting></build></properties></modules></dependencyManagement></parent></dependencies></packaging></version></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>基础学习篇</category>
      </categories>
  </entry>
  <entry>
    <title>与MySQL零距离接触</title>
    <url>/2019/11/13/%E4%B8%8EMySQL%E9%9B%B6%E8%B7%9D%E7%A6%BB%E6%8E%A5%E8%A7%A6-%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
    <content><![CDATA[<h1 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h1><p>mysql是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle旗下产品。MySQL是最流行的关系型数据库管理系统之一，在WEB应用方面，MySQL是最好的RDBMS(Relation Database Management System,关系数据库管理系统)应用软件之一。</p>
<h1 id="2-MySQL的安装与配置"><a href="#2-MySQL的安装与配置" class="headerlink" title="2.MySQL的安装与配置"></a>2.MySQL的安装与配置</h1><ul>
<li>MySQL安装方式(Windows)<ul>
<li>MSI安装</li>
</ul>
<ol>
<li>双击mysql-5.7.17.msi<ul>
<li>Developer Default(安装所有 MySQL 数据库需要的产品)</li>
<li>Server only (仅仅使用 MySQL 数据库的服务器)</li>
<li>Client only (仅仅使用 MySQL 数据库的客户端)</li>
<li>Full (安装所有包含 MySQL 数据库的产品)</li>
<li>Custom (手动选择需要安装的 MySQL 数据库的产品) </li>
</ul>
</li>
<li>选择server only</li>
<li>当MySQL数据库升级成功后，点击next</li>
<li>一路点击next，直到Type and Networking页（这里我选择默认配置，也可以根据自身需求自定义）<ul>
<li>Config type（配置服务器类型）</li>
<li>TCP/IP（选择TCP/IP协议）</li>
<li>Port Number（选择端口号：默认3306）</li>
</ul>
</li>
<li>设置账号和角色<ul>
<li>只需要设置root账号的密码</li>
<li>必须记住，登录MySQL数据库是需要验证</li>
<li>密码至少4位</li>
</ul>
</li>
<li>一路next直至finish收工</li>
<li>配置环境变量</li>
</ol>
<ul>
<li>ZIP安装</li>
</ul>
</li>
<li>官网下载地址<ul>
<li><a href="https://downloads.mysql.com/archives/installer/" target="_blank" rel="noopener">下载</a></li>
</ul>
</li>
</ul>
<h1 id="3-MySQL目录结构"><a href="#3-MySQL目录结构" class="headerlink" title="3. MySQL目录结构"></a>3. MySQL目录结构</h1><ul>
<li>bin目录（存储可执行文件）</li>
<li>docs目录（文档）</li>
<li>include目录（存储包含的头文件）</li>
<li>lib目录（存储库文件）</li>
<li>share目录（错误消息和字符集文件）</li>
</ul>
<h1 id="4-启动-关闭MySQL服务"><a href="#4-启动-关闭MySQL服务" class="headerlink" title="4.启动/关闭MySQL服务"></a>4.启动/关闭MySQL服务</h1><ul>
<li>Windows图形化界面启动/关闭MySQL服务<ul>
<li>win+R 打开运行窗口</li>
<li>输入services.msc（服务界面）</li>
<li>找到MySQL服务，进行启动/关闭操作</li>
</ul>
</li>
<li>dos命令启动/关闭MySQL服务<ul>
<li>win+R 打开运行窗口，输入cmd，进入dos命令行界面</li>
<li>输入MySQL命令：<ul>
<li>启动命令：net start mysql</li>
<li>关闭命令：net stop mysql</li>
<li><strong>注意：</strong> 以上命令中“mysql”对应的是mysql服务名称，如我安装的是MySQL5.7.17(安装默认服务名称)，那么我的命令就是net start/stop mysql57</li>
<li>net start/stop 命令对于Windows所有的服务都可以实现启动与关闭操作</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="5-MySQL的登录与退出"><a href="#5-MySQL的登录与退出" class="headerlink" title="5.MySQL的登录与退出"></a>5.MySQL的登录与退出</h1><ul>
<li><p>MySQL登录：mysql + 参数<br>  <strong>mysql -h127.0.0.1 -P3306 -uroot -proot</strong></p>
<table>
<thead>
<tr>
<th align="left"><strong>参数</strong></th>
<th align="left"><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">-D , –database = name</td>
<td align="left">打开指定数据库</td>
</tr>
<tr>
<td align="left"><strong>-P</strong>,-port = #</td>
<td align="left">端口号</td>
</tr>
<tr>
<td align="left">-p , –password [=name]</td>
<td align="left">密码</td>
</tr>
<tr>
<td align="left">-u ,–user = name</td>
<td align="left">用户名/登录名</td>
</tr>
<tr>
<td align="left">–delimiter = name</td>
<td align="left">指定分隔符</td>
</tr>
<tr>
<td align="left">-h , –host = name</td>
<td align="left">服务器名称</td>
</tr>
<tr>
<td align="left">–prompt = name</td>
<td align="left">设置提示符</td>
</tr>
<tr>
<td align="left">-V , –version</td>
<td align="left">输出版本信息并且退出</td>
</tr>
<tr>
<td align="left"><strong>注意</strong> 端口号与密码大小写，端口号大写 <strong>P</strong> ,密码小写<strong>p</strong>。</td>
<td align="left"></td>
</tr>
</tbody></table>
</li>
<li><p>MySQL退出（进入到MySQL命令行操作界面）</p>
<ul>
<li>mysql &gt; exit;</li>
<li>mysql &gt; quit;</li>
<li>mysql &gt; \q;</li>
</ul>
</li>
</ul>
<h1 id="6-MySQL提示符"><a href="#6-MySQL提示符" class="headerlink" title="6.MySQL提示符"></a>6.MySQL提示符</h1><ul>
<li><p>连接客户端时通过prompt修改</p>
<ul>
<li><strong>mysql -uroot -proot –prompt</strong> 参数（可自定义）</li>
</ul>
</li>
<li><p>连接上客户端之后通过prompt修改</p>
<ul>
<li><strong>prompt</strong> 参数（可自定义）</li>
</ul>
</li>
<li><p>提示符</p>
<table>
<thead>
<tr>
<th align="left"><strong>参数</strong></th>
<th align="left"><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">\D</td>
<td align="left">完整日期</td>
</tr>
<tr>
<td align="left">\d</td>
<td align="left">当前数据库</td>
</tr>
<tr>
<td align="left">\h</td>
<td align="left">服务器名称</td>
</tr>
<tr>
<td align="left">\u</td>
<td align="left">当前用户</td>
</tr>
</tbody></table>
</li>
</ul>
<h1 id="7-MySQL语句规范"><a href="#7-MySQL语句规范" class="headerlink" title="7.MySQL语句规范"></a>7.MySQL语句规范</h1><ul>
<li>关键字与函数名称全部大写</li>
<li>数据库名称、表名称、字段名称全部小写；</li>
<li>SQL语句必须以“;”结尾（注意需要使用英文下的 <strong>“;”</strong>）</li>
</ul>
<h1 id="8-MySQL数据类型"><a href="#8-MySQL数据类型" class="headerlink" title="8.MySQL数据类型"></a>8.MySQL数据类型</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a><strong>概述</strong></h2><p><strong>数据类型是值列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储格式，代表了不同的信息类型。</strong></p>
<ul>
<li><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a><strong>数值类型</strong></h3><table>
<thead>
<tr>
<th align="left"><strong>数据类型</strong></th>
<th align="left"><strong>大小</strong></th>
<th align="left"><strong>范围（有符号）</strong></th>
<th align="left"><strong>无符号（无符号）</strong></th>
<th align="left"><strong>用途</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">TINYINT</td>
<td align="left">1字节</td>
<td align="left">(-128，127)</td>
<td align="left">(0，255)</td>
<td align="left">小整数值</td>
</tr>
<tr>
<td align="left">SMALLINT</td>
<td align="left">2 字节</td>
<td align="left">(-32 768，32 767)</td>
<td align="left">(0，65 535)</td>
<td align="left">大整数值</td>
</tr>
<tr>
<td align="left">MEDIUMINT</td>
<td align="left">3 字节</td>
<td align="left">(-8 388 608，8 388 607)</td>
<td align="left">(0，16 777 215)</td>
<td align="left">大整数值</td>
</tr>
<tr>
<td align="left">INT或INTEGER</td>
<td align="left">4 字节</td>
<td align="left">(-2 147 483 648，2 147 483 647)</td>
<td align="left">(0，4 294 967 295)</td>
<td align="left">大整数值</td>
</tr>
<tr>
<td align="left">BIGINT</td>
<td align="left">8 字节</td>
<td align="left">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td>
<td align="left">(0，18 446 744 073 709 551 615)</td>
<td align="left">极大整数值</td>
</tr>
<tr>
<td align="left">FLOAT</td>
<td align="left">4 字节</td>
<td align="left">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td>
<td align="left">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td>
<td align="left">单精度浮点数值</td>
</tr>
<tr>
<td align="left">DOUBLE</td>
<td align="left">8 字节</td>
<td align="left">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>
<td align="left">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>
<td align="left">双精度浮点数值</td>
</tr>
<tr>
<td align="left">DECIMAL</td>
<td align="left">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td>
<td align="left">依赖于M和D的值</td>
<td align="left">依赖于M和D的值</td>
<td align="left">小数值</td>
</tr>
</tbody></table>
</li>
<li><h3 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a><strong>日期和时间类型</strong></h3><table>
<thead>
<tr>
<th align="left"><strong>数据类型</strong></th>
<th align="left"><strong>大小</strong></th>
<th align="left"><strong>范围</strong></th>
<th align="left"><strong>格式</strong></th>
<th align="left"><strong>用途</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">DATE</td>
<td align="left">3</td>
<td align="left">1000-01-01/9999-12-31</td>
<td align="left">YYYY-MM-DD</td>
<td align="left">日期值</td>
</tr>
<tr>
<td align="left">TIME</td>
<td align="left">3</td>
<td align="left">‘-838:59:59’/‘838:59:59’</td>
<td align="left">HH:MM:SS</td>
<td align="left">时间值或持续时间</td>
</tr>
<tr>
<td align="left">YEAR</td>
<td align="left">1</td>
<td align="left">1901/2155</td>
<td align="left">YYYY</td>
<td align="left">年份值</td>
</tr>
<tr>
<td align="left">DATETIME</td>
<td align="left">8</td>
<td align="left">1000-01-01 00:00:00/9999-12-31 23:59:59</td>
<td align="left">YYYY-MM-DD HH:MM:SS</td>
<td align="left">混合日期和时间值</td>
</tr>
<tr>
<td align="left">TIMESTAMP</td>
<td align="left">4</td>
<td align="left">1970-01-01 00:00:00/2038结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038年1月19日 凌晨 03:14:07</td>
<td align="left">YYYYMMDD HHMMSS</td>
<td align="left">混合日期和时间值，时间戳</td>
</tr>
</tbody></table>
</li>
<li><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a><strong>字符串类型</strong></h3><table>
<thead>
<tr>
<th align="left"><strong>数据类型</strong></th>
<th align="left"><strong>大小</strong></th>
<th align="left"><strong>用途</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">CHAR</td>
<td align="left">0-255字节</td>
<td align="left">定长字符串</td>
</tr>
<tr>
<td align="left">VARCHAR</td>
<td align="left">0-65535 字节</td>
<td align="left">变长字符串</td>
</tr>
<tr>
<td align="left">TINYBLOB</td>
<td align="left">0-255字节</td>
<td align="left">不超过255 个字符的二进制字符串</td>
</tr>
<tr>
<td align="left">TINYTEXT</td>
<td align="left">0-255字节</td>
<td align="left">短文本字符串</td>
</tr>
<tr>
<td align="left">BLOB</td>
<td align="left">0-65 535字节</td>
<td align="left">二进制形式的长文本数据</td>
</tr>
<tr>
<td align="left">TEXT</td>
<td align="left">0-65 535字节</td>
<td align="left">长文本数据</td>
</tr>
<tr>
<td align="left">MEDIUMBLOB</td>
<td align="left">0-16 777 215字节</td>
<td align="left">二进制形式的中等长度文本数据</td>
</tr>
<tr>
<td align="left">MEDIUMTEXT</td>
<td align="left">0-16 777 215字节</td>
<td align="left">中等长度文本数据</td>
</tr>
<tr>
<td align="left">LONGBLOB</td>
<td align="left">0-4 294 967 295字节</td>
<td align="left">二进制形式的极大文本数据</td>
</tr>
<tr>
<td align="left">LONGTEXT</td>
<td align="left">0-4 294 967 295字节</td>
<td align="left">极大文本数据</td>
</tr>
</tbody></table>
</li>
</ul>
<h1 id="9-MySQL常用命令"><a href="#9-MySQL常用命令" class="headerlink" title="9.MySQL常用命令"></a>9.MySQL常用命令</h1><ul>
<li><strong>注意：原意 -&gt; 缩写:</strong> database_name -&gt; db_name;table_nam -&gt; tb_name;column_name -&gt; col_name;</li>
<li><strong>显示当前服务器版本：</strong> SELECT VERSION();</li>
<li><strong>显示当前日期的时间：</strong> SELECT NOW();</li>
<li><strong>显示当前用户：</strong> SELECT USER();</li>
<li><strong>显示警告信息：</strong> SHOW WARINGS;</li>
<li><strong>显示当前服务器的数据库列表：</strong><ul>
<li>CREATE {DATABASES | SCHEMAS} [ LIKE  ‘pattern’ | WHERE expr]</li>
<li>eg: SHOW DATABASES;</li>
</ul>
</li>
<li><strong>创建数据库：</strong><ul>
<li>CREATE  {DATABASE | SCHEMA}  [IF NOT EXISTS]  db_name  [ DEFAULT ] CHARACTER SET [ = ] charset_name;</li>
<li><strong>“{}”为必选项，“|”表示N选1，“[]” 可以省略</strong></li>
<li>eg: CREATE DATABASE test;</li>
</ul>
</li>
<li><strong>显示创建数据库字符集：</strong> SHOW CREATE DATABSE db_name;</li>
<li><strong>修改数据库：</strong><ul>
<li>ALTER {DATABASE | SCHEMA}   db_name  [ DEFAULT ] CHARACTER SET [ = ] charset_name;</li>
<li>eg: ALERT DATABASE test CHARACTER SET gbk;</li>
</ul>
</li>
<li><strong>删除数据库：</strong><ul>
<li>DROP {DATABASE  | SCHEMA} [IF EXISTS] db_name ;</li>
<li>eg: DROP DATABASE test;</li>
</ul>
</li>
<li><strong>打开数据库：</strong> USE db_name;</li>
<li><strong>显示当前已经打开的数据库：</strong> SELECT DATABASE();</li>
<li><strong>创建数据表：</strong><ul>
<li>CTEATE TABLE [IF NOT EXISTS] table_name(column_name data_type,…);</li>
</ul>
</li>
<li><strong>查看数据表列表：</strong><ul>
<li>SHOW TABLES [FROM db_name] [LIKE ‘pattern’| WHERE expr]</li>
</ul>
</li>
<li><strong>查看数据表结构：</strong> SHOW COLUMNS FROM tb_name;</li>
<li><strong>查看数据表索引：</strong> SHOW INDEXES FROM tb_name;</li>
<li><strong>插入记录：</strong> INSERT [ INTO ] ta_name [(col_name,…)] VALUES (val,…);</li>
<li><strong>记录查找：</strong> SELECT expr,… FROM tb_name;</li>
<li><strong>修改数据表：</strong><ul>
<li>添加单列： ALTER TABLE tb_name ADD [ COLUMN ] col_name column_definition [ FIRST | AFTER col_name];</li>
<li>添加多列： ALTER TABLE tb_name ADD [ COLUMN ] (col_name column_definition,…);</li>
<li>删除单列： ALTER TABLE tb_name DROP col_name;</li>
<li>删除多列： ALTER TABLE tb_name DORP col_name,DROP col_name2,…;</li>
<li>添加主键约束：ALTER TABLE tb_name ADD [ CONSTRAINT [ symbol ] ] PRIMARY KEY [ index_type ] (index_col_name);</li>
<li>删除主键约束：ALTER TABLE tb_name DORP PRIMARY KEY;</li>
<li>添加唯一约束：ALTER TABLE tb_name ADD [ CONSTRAINT [ symbol ] ] UNIQUE [ INDEX | KEY ] [ index_type ] (index_col_name,…);</li>
<li>删除唯一约束：ALTER TABLE tb_name DROP { INDEX | KEY } index_name;</li>
<li>添加外键约束：ALTER TABLE tb_name ADD [ CONSTRAINT [ symbol ] ] FOREIGN KEY [ index_name ] (index_col_name,..) REFERENCES reference_definition;</li>
<li>删除外键约束：ALTER TABLE tb_name DROP FOREIGN KEY fk_symbol;</li>
<li>添加/删除默认约束：ALTER TABLE tb_name ALTER [ COLUMN ] col_name { SET DEFAULT literal | DROP DEFAULT}</li>
<li>修改列定义：ALTER TABLE tb_name MODIFY [ COLUMN ] col_name column_defintion [ FIRST | AFTER col_name];</li>
<li>修改列名称：ALTER TABLE tb_name CHANGE [ COLUMN ] old_col_name new_col_name column_defintion [ FIRST | AFTER col_name];</li>
<li>修改数据表名称：<ul>
<li>ALTER TABLE tb_name RENAME [ TO | AS ] new_tb_name;</li>
<li>RENAME TABLE tb_name TO new_tb_name [, ta_name2 TO new_tb_name2,…];</li>
</ul>
</li>
</ul>
</li>
<li><strong>数据记录操作：</strong><ul>
<li>插入记录：<ul>
<li>INSERT [ INTO ] tb_name [ (col_name,…) ] { VALUES | VALUE } ({expr | DEFAULT},…),(…),…</li>
<li>INSERT [ INTO ] tb_name SET col_name = { expr | DEFAULT},..</li>
<li><strong>说明：</strong> 与第一种方式的区别在于，此方法可以使用子查询(SubQuery),以及不能批量插入多条数据。</li>
<li>INSERT [ INTO ] tb_name [ (col_name,…) ] SELECT …</li>
<li><strong>说明：</strong> 可以将查询的数据直接插入到指定数据表。</li>
</ul>
</li>
<li>更新记录(单表更新)：UPDATE [ LOW_PRIORITY ][ IGNORE ] table_reference SET col_name = {expr|DEFAULT}[, col_name2={expr2|DEFAULT}]…[WHRERE where_condition];</li>
<li>删除记录(单表删除)：DELETE FROM tb_name [WHERE where_condition];</li>
</ul>
</li>
</ul>
<h1 id="10-MYSQL之记录操作"><a href="#10-MYSQL之记录操作" class="headerlink" title="10.MYSQL之记录操作"></a>10.MYSQL之记录操作</h1><ul>
<li><strong>有符号与无符号：</strong> unsigned</li>
<li><strong>自动编号（自增长）：</strong> AUTO_INCREMENT</li>
<li><strong>备注：</strong> COMMENT</li>
<li><strong>空值与非空：</strong>null not null</li>
<li><strong>默认约束:</strong> DEFAULT</li>
<li><strong>主键约束：</strong> PRIMARY KEY</li>
<li><strong>唯一约束：</strong> UNIQUE KEY</li>
<li><strong>外键约束：</strong> FOREIGN KEY</li>
</ul>
<h1 id="11-约束"><a href="#11-约束" class="headerlink" title="11.约束"></a>11.约束</h1><ul>
<li>约束保证数据的完整性和一致性。</li>
<li>约束分类表级约束和列级约束。<h2 id="约束类型包括："><a href="#约束类型包括：" class="headerlink" title="约束类型包括："></a>约束类型包括：</h2></li>
<li>非空约束：NOT NULL<ul>
<li>字段禁止为空</li>
</ul>
</li>
<li>默认约束: DEFAULT<ul>
<li>当插入记录时，如果没有明确为字段赋值，则自动赋予默认值</li>
</ul>
</li>
<li>主键约束: PRIMARY KEY<ul>
<li>每张数据表智能存在一个主键</li>
<li>保证记录的唯一性</li>
<li>自动为NOT NULL</li>
</ul>
</li>
<li>唯一约束: UNIQUE KEY<ul>
<li>保证记录的唯一性</li>
<li>字段可以为空值（NULL）</li>
<li>每张数据表可以存在多个唯一约束</li>
</ul>
</li>
<li>外键约束: FOREIGN KEY<ul>
<li>保证数据一致性，完整性</li>
<li>实现一对一或一对多关系</li>
<li>外键约束要求：<ul>
<li>父表（参照表）与子表（外键表）必须使用相同的存储引擎，而且禁止使用临时表；</li>
<li>数据表的存储引擎只能为InnoDB；</li>
<li>外键列和参照列必须具有相似的数据类型。其中数字的长度或是有符号必须相同；而字符的长度则可以不同；</li>
<li>外键列和参照列必须创景索引。如果外键列不存在索引的话，MySQL将自动创建索引。</li>
</ul>
  <strong>注意：</strong>参照列没有索引，MySQL自动创建索引，而外键列没有索引，MySQL不会创景索引。</li>
<li>外键约束的参照：<ul>
<li>CASCADE:从父表删除或更新且自动删除或更新子表中匹配的行</li>
<li>SET NULL:从父表删除或更新行，并设置子表中的外键列为NULL。如果使用该选项，必须保证子表没有指定NOT NULL。</li>
<li>RESTRICT:拒绝对父表的删除或更新操作。</li>
<li>NO ACTION:标准SQL的关键字，在MySQL中与RESTRICT相同。</li>
</ul>
</li>
</ul>
</li>
<li>表级约束与列级约束  <ul>
<li>列级约束：对一个数据列建立的约束</li>
<li>表级约束：对多个数据列建立的约束</li>
</ul>
  <strong>注意</strong> 列级约束既可以在列定义时声明，也可以在列定以后声明；表级约束只能在列定义后声明。</li>
</ul>
]]></content>
      <categories>
        <category>基础学习篇</category>
      </categories>
  </entry>
  <entry>
    <title>从生活、工作以及交流中发现美。</title>
    <url>/2019/10/31/%E4%B8%AA%E4%BA%BA%E6%89%8B%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p><strong>那些最棒的科技公司做了什么与众不同的事情？</strong></p>
<ul>
<li>三个关键主题：<ul>
<li>提前处理风险</li>
<li>最有风险的事情就是不去承担风险</li>
<li>结果是衡量表现的唯一标准<br>个人理解: 以最低风险获得最高的收益结果</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>手记</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/10/31/hello-world/</url>
    <content><![CDATA[<p>铭记今天，始于2019-10-31。</p>
]]></content>
  </entry>
</search>
